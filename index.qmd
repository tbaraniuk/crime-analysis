---
title: "Crime vs Evictions Analysis"
author: "Kristina Polonska, Mariana Konovalenko, Taras Baraniuk"
date: 10/21/2025
format:
    html: default
---

## Import Libraries
```{r}
#| message: false
#| warning: false
#| code-fold: true
#| code-summary: "show code"

if (!require("pacman")) install.packages("pacman")

pacman::p_load(
  arrow,
  tidyverse,
  lubridate,
  rvest,
  tidyr,
  plotly,
  scales,
  sf,
  janitor,
  stringr,
  patchwork,
  purrr
)
```


## Read the Data
```{r}
#| message: false

complaint_data <- read_csv("data/NYPD_Complaint_Data_Historic_20251019.csv")

complaint_data_full <- read_parquet("data/NYPD_Complaint_Data_Historic_20251021.parquet") |>
  clean_names() |>
  mutate(
    complaint_datetime = lubridate::mdy_hms(
      paste(cmplnt_fr_dt, cmplnt_fr_tm), 
      tz = "America/New_York", 
      quiet = TRUE
    )
  )

evictions <- read_csv_arrow("data/Evictions_20251019.csv")

df_full_evictions <- read_csv_arrow("data/Evictions_20251021.csv") |>
  clean_names()
```


## Parse the Crime in Ukraine from Wikipedia
```{r}
url <- "https://uk.wikipedia.org/wiki/Злочинність_в_Україні"

page <- read_html(url)
tabs <- page |> 
  html_elements("table.wikitable")

crime_ukr <- tabs[[1]] |> 
  html_table(fill = TRUE)
```


## Preprocess the Data
```{r}
# Find out number of complaints each year: 
complaint_summary <- complaint_data |>
  mutate(
    date = mdy(CMPLNT_FR_DT), 
    year = year(date)
  ) |>
  dplyr::filter(year >= 1900) |> 
  rename(
    NYC_district = BORO_NM
  )

# Group by year and borough and count numbers for each group
by_year_borough <- evictions |>
  mutate(
    exec_date = mdy(`Executed Date`),     
    year = year(exec_date),
    borough = toupper(BOROUGH)
  ) |> 
  count(year, borough, name = "n") |>
  arrange(year, borough) |>
  collect()

# Clean and process ukrainian crime rates data (add extra 2 missing rows):
crime_ukr <- crime_ukr |>
  rename(year = "рік") |>
  dplyr::filter(!is.na(year) & year >= 2010) |>
  mutate(
    total_crimes = str_replace_all(`всього злочинів`, "\\D", ""),
    total_crimes = na_if(total_crimes, ""),
    total_crimes = as.integer(total_crimes)
  ) |>
  select(year, total_crimes)

crime_ukr <- add_row(crime_ukr, year = 2024, total_crimes = 382335)
crime_ukr <- add_row(crime_ukr, year = 2025, total_crimes = 473662)
```


## Visualizations

### The Problem

The goal of our research is to suggest how government should remedy *rising crime rates in Ukraine*. We figured that *evictions highly affect crime rates*. We will take a look at what government of *New York City* has done in this area and how that helped lower number of crimes. Visualizations will help us see the patterns more clearly and confidently say which action helped.

### Rising Crime Rates In Ukraine
```{r}
#| code-fold: true
#| warning: false
#| code-summary: "show code"

ggplot(crime_ukr, aes(x = year, y = total_crimes / 1000)) +
  geom_line(color = "#A2B5CD", size = 1) +        
  geom_point(color = "#A2B5CD", size = 2) + 
  geom_text(
    aes(label = paste0(round(total_crimes / 1000, 0), "k")),
    vjust = -1.3,                     
    size = 3,                                   
    color = "black"
  ) +
  scale_x_continuous(breaks = crime_ukr$year) +
  scale_fill_brewer(palette = "Set2") +
  labs(title = "Number of crimes commited each year in Ukraine (in thousands)",
       x = NULL,
       y = NULL) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    panel.grid.minor.x = element_blank(),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    plot.margin = margin(10, 20, 20, 20)
  )
```


### NYC Crime Complaints by Years
```{r}
#| code-fold: true
#| code-summary: "show code"

complaint_vis <- complaint_summary |>
  dplyr::filter(!is.na(year) & year >= 1990) |>
  count(year, name = 'complaints') |>
  arrange(year) |>
  ggplot(aes(x = year, y = complaints, group = 1, text = paste0(
  'year: ', year,
  '\ncomplaints: ', comma(complaints)
))) +
  geom_line(color = '#2F539B', linewidth = 1) +
  scale_y_continuous(labels = comma) + 
  scale_x_continuous(breaks = pretty_breaks(n = 5)) +
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = 'NYC crime complaints by year',
    x = 'year', y = 'number of complaints'
  ) +
  theme_minimal() +
  theme(
    plot.background = element_rect(fill = '#F5F5F5'),
    panel.background = element_rect(fill = '#F5F5F5'),
    panel.grid.major.y = element_line(color = "#728FCE"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor = element_blank(),
    text = element_text(face = 'italic')
  )

complaint_interactive <- ggplotly(complaint_vis, tooltip = 'text')

complaint_interactive
```


### NYC Crime Complaints Peak Hours, Weekdays and Days in 2024
```{r}
#| code-fold: true
#| code-summary: "show code"

complaint_data_full |>
  dplyr::filter(!is.na(complaint_datetime) & year(complaint_datetime) == 2024) |>
  mutate(
    hour_of_day = lubridate::hour(complaint_datetime),
  ) |>
  collect() |>
  ggplot(aes(x = hour_of_day)) +
    geom_bar(fill = "#2F539B") +
    scale_fill_brewer(palette = "Set2") +
    labs(
      title = "Peak Hours in 2024",
      x = "Hour of Day (0-23)",
      y = "Total Complaints Count"
    ) +
    theme_minimal() +
    facet_wrap(~ law_cat_cd, scales = "free_y")
```

```{r}
#| code-fold: true
#| code-summary: "show code"
#| fig-width: 14
#| fig-height: 9

complaint_data_full |>
  dplyr::filter(!is.na(complaint_datetime) & complaint_datetime >= "2024-01-01" & complaint_datetime <= "2024-12-31") |>
  mutate(
    day_of_year = lubridate::yday(complaint_datetime)
  ) |>
  collect() |>
  ggplot(aes(x = day_of_year)) + 
    geom_histogram(binwidth = 7, fill = "#2F539B", boundary = 1) + 
    scale_fill_brewer(palette = "Set2") +
    labs(
      title = "Complaints Week Trend in 2024 (Binned by Week)",
      x = "Day of Year (1-366, grouped into weekly bins)",
      y = "Total Complaints Count"
    ) +
    theme_minimal() +
    facet_wrap(~ law_cat_cd, scales = "free_y", nrow = 3)
```


### TOP 10 Offenses for each Level
```{r}
#| code-fold: true
#| code-summary: "show code"

complaint_data_full |>
  dplyr::filter(
    !is.na(complaint_datetime) & 
    lubridate::year(complaint_datetime) == 2024 &
    !is.na(law_cat_cd) & !is.na(ofns_desc)
  ) |>
    count(law_cat_cd, ofns_desc, sort = TRUE) |>
  group_by(law_cat_cd) |>
  slice_max(order_by = n, n = 10) |>
  ungroup() |>
  mutate(
    law_cat_cd = forcats::fct_reorder(law_cat_cd, n, .fun = sum, .desc = TRUE),
    ofns_desc = stringr::str_to_title(ofns_desc)
  ) |>
  collect() |>
  ggplot(aes(x = n, y = forcats::fct_reorder(ofns_desc, n), fill = law_cat_cd)) +
    geom_col(show.legend = FALSE) +
    scale_fill_brewer(palette = "Set2") +
    labs(
      title = "Top 10 Offenses by Level in 2024",
      x = "Total Complaint Count",
      y = "Offense Description"
    ) +
    theme_minimal() +
    facet_wrap(~ law_cat_cd, scales = "free_y", nrow = 3)
```


### Relation of Suspect's Age Group and Offense Level in 2024 and 2025
```{r}
#| code-fold: true
#| code-summary: "show code"
#| fig-width: 14
#| fig-height: 7

age_levels <- c("<18", "18-24", "25-44", "45-64", "65+")

complaint_data_full |>
  dplyr::filter(
    !is.na(complaint_datetime) &
    lubridate::year(complaint_datetime) >= 2024 &
    !is.na(law_cat_cd) &
    susp_age_group %in% age_levels
  ) |>
  mutate(
    susp_age_group = factor(susp_age_group, levels = age_levels)
  ) |>
  collect() |>
  ggplot(aes(x = susp_age_group, fill = law_cat_cd)) +
    geom_bar(position = "dodge") +
    scale_fill_brewer(palette = "Set2") +
    labs(
      title = "Complaint Counts by Suspect Age Group and Offense Level (2024 and 2025)",
      x = "Suspect's Age Group",
      y = "Total Complaint Count",
      fill = "Offense Level"
    ) +
    theme_minimal()
```


### Relation of Suspect's Sex and Offense Level
```{r}
#| code-fold: true
#| code-summary: "show code"
#| fig-width: 14
#| fig-height: 7

complaint_data_full |>
  dplyr::filter(
    !is.na(complaint_datetime) & 
    lubridate::year(complaint_datetime) == 2024 &
    !is.na(law_cat_cd) &
    susp_sex %in% c("M", "F", "U") 
  ) |>
  collect() |>
    ggplot(aes(x = law_cat_cd, fill = susp_sex)) +
    geom_bar(position = "fill") +
      scale_fill_brewer(palette = "Set2") +
      scale_y_continuous(labels = scales::percent_format()) +
      labs(
        title = "Proportion of Suspect Sex by Offense Level (2024)",
        x = "Offense Level",
        y = "Percentage",
        fill = "Suspect Sex"
      ) +
      theme_minimal()
```


### Total Counts of Evictions, Felonies, Misdemeanor and Violation (2016-2025)
```{r}
#| code-fold: true
#| code-summary: "show code"

eviction_monthly <- df_full_evictions |>
  select(borough, executed_date) |>
  mutate(executed_date = as_date(executed_date, format = "%m/%d/%Y")) |>
  dplyr::filter(
    executed_date >= "2016-01-01" & executed_date <= "2025-12-31",
    !is.na(borough),
    borough != "Citywide"
  ) |>
  mutate(borough = str_to_title(borough)) |>
  mutate(
    month_year = floor_date(executed_date, "month")
  ) |>
  group_by(month_year) |>
  summarise(total_count = n()) |>
  collect() |>
  mutate(type = "Evictions")
 
crime_monthly <- complaint_data_full |>
  select(boro_nm, cmplnt_fr_dt, law_cat_cd) |>
  mutate(cmplnt_fr_dt = as_date(cmplnt_fr_dt, format = "%m/%d/%Y")) |>
  dplyr::filter(
    cmplnt_fr_dt >= "2016-01-01" & cmplnt_fr_dt <= "2025-12-31",
    !is.na(boro_nm),
    law_cat_cd == "FELONY"
  ) |>
  mutate(borough = str_to_title(boro_nm)) |>
  mutate(
    month_year = floor_date(cmplnt_fr_dt, "month")
  ) |>
  group_by(month_year) |>
  summarise(total_count = n()) |>
  collect() |>
  mutate(type = "Felonies")

misdemeanor_monthly <- complaint_data_full |>
  select(boro_nm, cmplnt_fr_dt, law_cat_cd) |>
  mutate(cmplnt_fr_dt = as_date(cmplnt_fr_dt, format = "%m/%d/%Y")) |>
  dplyr::filter(
    cmplnt_fr_dt >= "2016-01-01" & cmplnt_fr_dt <= "2025-12-31",
    !is.na(boro_nm),
    law_cat_cd == "MISDEMEANOR"
  ) |>
  mutate(borough = str_to_title(boro_nm)) |>
  mutate(
    month_year = floor_date(cmplnt_fr_dt, "month")
  ) |>
  group_by(month_year) |>
  summarise(total_count = n()) |>
  collect() |>
  mutate(type = "Misdemeanors")

violation_monthly <- complaint_data_full |>
  select(boro_nm, cmplnt_fr_dt, law_cat_cd) |>
  mutate(cmplnt_fr_dt = as_date(cmplnt_fr_dt, format = "%m/%d/%Y")) |>
  dplyr::filter(
    cmplnt_fr_dt >= "2016-01-01" & cmplnt_fr_dt <= "2025-12-31",
    !is.na(boro_nm),
    law_cat_cd == "VIOLATION"
  ) |>
  mutate(borough = str_to_title(boro_nm)) |>
  mutate(
    month_year = floor_date(cmplnt_fr_dt, "month")
  ) |>
  group_by(month_year) |>
  summarise(total_count = n()) |>
  collect() |>
  mutate(type = "Violation")

bind_rows(eviction_monthly, crime_monthly, misdemeanor_monthly, violation_monthly) |>
  ggplot(aes(x = month_year, y = total_count, color = type)) +
    geom_line(linewidth = 1) +
    facet_wrap(~ type, ncol = 1, scales = "free_y") +
    scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
    scale_fill_brewer(palette = "Set2") +
    labs(
      title = paste("Total Monthly Evictions vs. Felonies in (2016-2025)"),
      x = "Date",
      y = "Total Count"
    ) +
    theme_minimal() +
    theme(legend.position = "none")
```


### Hotspots for Evictions, Felonies, Violations and  over Years
```{r}
#| warning: false
#| code-fold: true
#| code-summary: "show code"
#| fig-width: 16
#| fig-height: 16

YEAR_START <- 2017
YEAR_END <- 2024

eviction_points_anim <- df_full_evictions |>
  select(borough, latitude, longitude, executed_date) |>
  mutate(
    executed_date = as_date(executed_date, format = "%m/%d/%Y"),
    year = year(executed_date)
  ) |>
  dplyr::filter(
    year >= YEAR_START & year <= YEAR_END, 
    !is.na(latitude), !is.na(longitude)
  ) |>
  mutate(
    latitude = as.numeric(latitude),
    longitude = as.numeric(longitude)
  ) |>
  dplyr::filter(
    latitude > 40.4 & latitude < 40.9,
    longitude > -74.3 & longitude < -73.6
  ) |>
  collect()

base_crime_points_anim <- complaint_data_full |>
  select(c(boro_nm, latitude, longitude, cmplnt_fr_dt, law_cat_cd)) |>
  mutate(
    cmplnt_fr_dt = as_date(cmplnt_fr_dt, format = "%m/%d/%Y"),
    year = year(cmplnt_fr_dt),
    latitude = as.numeric(latitude),
    longitude = as.numeric(longitude)
  ) |>
  dplyr::filter(
    year >= YEAR_START & year <= YEAR_END,
    law_cat_cd %in% c("FELONY", "MISDEMEANOR", "VIOLATION"),
    !is.na(latitude), !is.na(longitude)
  ) |>
  dplyr::filter(
    latitude > 40.4 & latitude < 40.9,
    longitude > -74.3 & longitude < -73.6
  ) |>
  collect()

plot_evictions <- ggplot() +
  stat_density_2d(
    data = eviction_points_anim,
    aes(x = longitude, y = latitude, fill = ..level.., frame = year),
    geom = "polygon"
  ) +
  scale_fill_viridis_c(option = "magma") +
  theme_minimal() +
  theme(legend.position = "none")

plot_felonies <- ggplot() +
  stat_density_2d(
    data = dplyr::filter(base_crime_points_anim, law_cat_cd == "FELONY"),
    aes(x = longitude, y = latitude, fill = ..level.., frame = year),
    geom = "polygon"
  ) +
  scale_fill_viridis_c(option = "magma") +
  theme_minimal() +
  theme(legend.position = "none")

plot_misdemeanors <- ggplot() +
  stat_density_2d(
    data = dplyr::filter(base_crime_points_anim, law_cat_cd == "MISDEMEANOR"),
    aes(x = longitude, y = latitude, fill = ..level.., frame = year),
    geom = "polygon"
  ) +
  scale_fill_viridis_c(option = "magma") +
  theme_minimal() +
  theme(legend.position = "none")

plot_violations <- ggplot() +
  stat_density_2d(
    data = dplyr::filter(base_crime_points_anim, law_cat_cd == "VIOLATION"),
    aes(x = longitude, y = latitude, fill = ..level.., frame = year),
    geom = "polygon"
  ) +
  scale_fill_viridis_c(option = "magma") +
  theme_minimal() +
  theme(legend.position = "none")

fig <- plotly::subplot(
  ggplotly(plot_evictions),
  ggplotly(plot_felonies),
  ggplotly(plot_misdemeanors),
  ggplotly(plot_violations),
  nrows = 2,
  shareX = TRUE,
  shareY = TRUE
) |>
  layout(
    title = "Eviction & Crime Hotspots over Years (2017-2024)",
    annotations = list(
      list(
        x = 0.22, y = 0.1,
        text = "Evictions",
        showarrow = FALSE,
        xref = 'paper', yref = 'paper',
        xanchor = 'center', yanchor = 'bottom'
      ),
      list(
        x = 0.78, y = 0.1,
        text = "Felonies",
        showarrow = FALSE,
        xref = 'paper', yref = 'paper',
        xanchor = 'center', yanchor = 'bottom'
      ),
      list(
        x = 0.22, y = 0.45,
        text = "Misdemeanors",
        showarrow = FALSE,
        xref = 'paper', yref = 'paper',
        xanchor = 'center', yanchor = 'bottom'
      ),
      list(
        x = 0.78, y = 0.45,
        text = "Violations",
        showarrow = FALSE,
        xref = 'paper', yref = 'paper',
        xanchor = 'center', yanchor = 'bottom'
      )
    )
  )

fig
```

<!-- ```{r}
#| code-fold: true
#| code-summary: "show code"
#| warning: false

ggplot(by_year_borough, aes(x = year, y = n, color = borough, group = borough)) +
  geom_line(size = 1.2) +
  geom_point(size = 2) +
  scale_x_continuous(
    breaks = unique(by_year_borough$year)
  ) + 
  labs(
    title = "Evictions by borough",
    x = NULL,
    y = "Number of evictions"
  ) +
  scale_color_brewer(palette = "RdYlBu") +
  geom_vline(xintercept = 2019, color = "#FF6347", linetype = "dashed", linewidth = 0.8) +
  annotate("text", x = 2019, 
           y = max(by_year_borough$n) * 1.05,   
           label = "HSTPA", 
           size = 4, color = "#FF6347", fontface = "bold") +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5),
    legend.title = element_blank(),
    plot.margin = margin(10, 20, 10, 10),   
    clip = "off"  
  )
``` -->
