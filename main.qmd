---
title: "Crime Analysis"
author: "Kristina Polonska, Mariana Konovalenko, Taras Baraniuk"
date: 21/10/2025
format: 
    html: default
---

## Import Libraries

```{r}
#| message: false
#| warning: false

library(arrow)
library(readr)
library(tidyverse)
library(lubridate)
library(readxl)
library(rvest)
library(tidyr)
library(plotly)
library(scales)
```


## Read & Preprocess the data
```{r}
#| message: false

# Download complaint data
complaint_data <- read_csv("data/NYPD_Complaint_Data_Historic_20251019.csv")

complaint_data_full <- read_parquet("data/NYPD_Complaint_Data_Historic_20251021.parquet")

# Download seven major felony data (2000-2024)
df_seven <- read_excel(
  "data/seven-major-felony-offenses-2000-2024.xls",
  sheet = "Seven Major Felony Offenses"
)

# Download non-seven major felony data (2000-2024)
df_non_seven <- read_excel(
  "data/non-seven-major-felony-offenses-2000-2024.xls",
  sheet = "Non-Seven Major Felony Offenses"
)

# Download misdemeanor felony data (2000-2024)
df_misdemeanor <- read_excel(
  "data/misdemeanor-offenses-2000-2024.xls",
  sheet = "Misdemeanor Offenses"
)

# Download violation offenses data (2000-2024)
df_violation <- read_excel(
  "data/violation-offenses-2000-2024.xls",
  sheet = "Violation Offenses"
)

# Get evictions data
evictions <- read_csv("data/Evictions_20251019.csv") 

# Parse ukrainian crime rates data:
url <- "https://uk.wikipedia.org/wiki/Злочинність_в_Україні"
page   <- read_html(url)
tabs   <- page %>% html_elements("table.wikitable")

crime_ukr <- tabs[[1]] %>% 
  html_table(fill = TRUE)
```

## Preprocess data

```{r}
# First group complaint dataset by year and find out number of complaints each year: 
complaint_summary <- complaint_data %>%
  mutate(
    date = mdy(CMPLNT_FR_DT), 
    year = year(date)
  ) %>%
  filter(year >= 1900) %>% 
  rename(
    NYC_district = BORO_NM
  )

# Clean felony-data datasets (2000-2024)
df_seven <- df_seven %>% 
  slice(3:min(11, n()))

df_non_seven <- df_non_seven %>% 
  slice(2:min(11, n()))

df_misdemeanor <- df_misdemeanor %>% 
  slice(2:min(11, n()))

df_violation <- df_violation %>% 
  slice(2:min(5, n()))

# Group by year and borough, count number in each group
by_year_borough <- evictions %>%
  mutate(
    exec_date = mdy(`Executed Date`),     
    year = year(exec_date),
    borough = toupper(BOROUGH)
  ) %>% 
  count(year, borough, name = "n") %>%
  arrange(year, borough)
```

## Visualizations

### NYC crime complaints by years
```{r}
#| code-fold: true
#| code-summary: "show code"

crime_year <- complaint_summary |>
  filter(!is.na(year), year >= 2000, year <= 2025) |>
  count(year, name = 'complaints') |>
  arrange(year)

complaint_vis <- ggplot(crime_year, aes(x = year, y = complaints, group = 1, text = paste0(
  'year: ', year,
  '\ncomplaints: ', comma(complaints)
))) +
  geom_line(color = '#2F539B', linewidth = 1) +
  scale_y_continuous(labels = comma) + 
  scale_x_continuous(breaks = pretty_breaks(n = 5)) +
  labs(
    title = 'NYC crime complaints by year',
    x = 'year', y = 'number of complaints'
  ) +
  theme_minimal() +
  theme(
    plot.background = element_rect(fill = '#F5F5F5'),
    panel.background = element_rect(fill = '#F5F5F5'),
    panel.grid.major.y = element_line(color = "#728FCE"),
    panel.grid.major.x = element_blank(),
    panel.grid.minor = element_blank(),
    text = element_text(face = 'italic')
  )

complaint_interactive <- ggplotly(complaint_vis, tooltip = 'text') |>
  layout(
    hovermode = 'x unified',
    yaxis = list(tickformat = ',d')
  )

complaint_interactive
```

### NYC Crime Complaints by Borough 
```{r}
#| code-fold: true
#| code-summary: "show code"
options(tigris_class = "sf", tigris_use_cache = TRUE)

crime_by_year_borough <- complaint_data %>%
  mutate(
    date = mdy(CMPLNT_FR_DT),
    year = year(date),
    borough = toupper(BORO_NM)
  ) %>%
  filter(!is.na(year), year >= 2000, year <= 2025) %>%
  group_by(year, borough) %>%
  summarise(complaints = sum(count, na.rm = TRUE), .groups = "drop") %>%
  mutate(year = as.integer(year))

crime_by_year_borough <- crime_by_year_borough %>%
  complete(
    year = 2000:2025,
    borough = c("MANHATTAN","BROOKLYN","QUEENS","BRONX","STATEN ISLAND"),
    fill = list(complaints = 0)
  )

nyc_boroughs <- counties(state = "NY", year = 2023) %>%
  filter(NAME %in% c("New York","Kings","Queens","Bronx","Richmond")) %>%
  mutate(
    borough = case_when(
      NAME == "New York" ~ "MANHATTAN",
      NAME == "Kings"    ~ "BROOKLYN",
      NAME == "Queens"   ~ "QUEENS",
      NAME == "Bronx"    ~ "BRONX",
      NAME == "Richmond" ~ "STATEN ISLAND"
    )
  )

crime_map <- left_join(nyc_boroughs, crime_by_year_borough, by = "borough")
max_value <- max(crime_by_year_borough$complaints, na.rm = TRUE)

p <- ggplot(crime_map, aes(group = borough)) +
  geom_sf(aes(fill = complaints), color = "white", linewidth = 0.4) +
  scale_fill_gradient(
    low = "#C7E9B4", high = "#081D58", 
    limits = c(0, max_value), na.value = "grey90"
  ) +
  labs(
    title = "NYC Crime Complaints by Borough",
    subtitle = "Year: {closest_state}",
    fill = "Complaints"
  ) +
  theme_minimal(base_size = 13) +
  transition_states(year, transition_length = 2, state_length = 1) +
  ease_aes("linear")

animate(p, nframes = 25, fps = 5, width = 800, height = 600, renderer = gifski_renderer())
```
